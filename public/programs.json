[
  {
    "title": "Point - Line",
    "steps": [
      {
        "explanation": "Die main() Methode wurde aufgerufen und auf den Callstack gepushed.",
        "codeLine": 1,
        "instructions": [
          {
            "type": "callStack",
            "action": "push",
            "payload": {
              "name": "main()",
              "classes": [
                "method_main"
              ]
            }
          },
          {
            "type": "heap",
            "action": "push",
            "payload": {
              "name": "args",
              "value": "[]",
              "type": "String[]",
              "classes": [
                "method_main"
              ],
              "address": "0x1001"
            }
          },
          {
            "type": "memStack",
            "action": "push",
            "payload": {
              "name": "args",
              "value": "0x1001",
              "type": "Reference",
              "classes": [
                "method_main"
              ]
            }
          }
        ]
      },
      {
        "explanation": "Punktkonstruktor wird mit den Werden (10, 5) aufgerufen.",
        "codeLine": 2,
        "instructions": [
          {
            "type": "memStack",
            "action": "push",
            "payload": {
              "name": "Return Address",
              "value": "Line 2",
              "type": "Address",
              "classes": []
            }
          },
          {
            "type": "callStack",
            "action": "push",
            "payload": {
              "name": "Point(10, 5)",
              "classes": [
                "object_1"
              ]
            }
          }
        ]
      },
      {
        "explanation": "Der Wert für 'x' wird auf dem Heap gespeichert.",
        "codeLine": 23,
        "instructions": [
          {
            "type": "heap",
            "action": "push",
            "payload": {
              "name": "x",
              "value": "10",
              "type": "int",
              "address": "0x2001",
              "classes": [
                "object_1"
              ]
            }
          }
        ]
      },
      {
        "explanation": "Der Wert für 'y' wird auf dem Heap gespeichert.",
        "codeLine": 24,
        "instructions": [
          {
            "type": "heap",
            "action": "push",
            "payload": {
              "name": "y",
              "value": "5",
              "type": "int",
              "address": "0x2002",
              "classes": [
                "object_1"
              ]
            }
          }
        ]
      },
      {
        "explanation": "Konstruktor ist beendet. Eine Referenz zum Punkt Objekt wird auf den Memorystack gespeichert.",
        "codeLine": 2,
        "instructions": [
          {
            "type": "callStack",
            "action": "pop",
            "payload": {
              "name": "Point(10, 5)",
              "classes": [
                "object_1"
              ]
            }
          },
          {
            "type": "memStack",
            "action": "pop",
            "payload": {
              "name": "Return Address",
              "value": "Line 2",
              "type": "Address",
              "classes": []
            }
          },
          {
            "type": "memStack",
            "action": "push",
            "payload": {
              "name": "a",
              "value": "0x2001",
              "type": "Reference",
              "classes": [
                "object_1"
              ]
            }
          }
        ]
      },
      {
        "explanation": "Punktkonstruktor wird mit den Werden (3, 4) aufgerufen.",
        "codeLine": 3,
        "instructions": [
          {
            "type": "memStack",
            "action": "push",
            "payload": {
              "name": "Return Address",
              "value": "Line 3",
              "type": "Address",
              "classes": []
            }
          },
          {
            "type": "callStack",
            "action": "push",
            "payload": {
              "name": "Point(3, 4)",
              "classes": [
                "object_2"
              ]
            }
          }
        ]
      },
      {
        "explanation": "Der Wert für 'x' wird auf dem Heap gespeichert.",
        "codeLine": 23,
        "instructions": [
          {
            "type": "heap",
            "action": "push",
            "payload": {
              "name": "x",
              "value": "3",
              "type": "int",
              "address": "0x2003",
              "classes": [
                "object_2"
              ]
            }
          }
        ]
      },
      {
        "explanation": "Der Wert für 'y' wird auf dem Heap gespeichert.",
        "codeLine": 24,
        "instructions": [
          {
            "type": "heap",
            "action": "push",
            "payload": {
              "name": "y",
              "value": "4",
              "type": "int",
              "address": "0x2004",
              "classes": [
                "object_2"
              ]
            }
          }
        ]
      },
      {
        "explanation": "Konstruktor ist beendet. Eine Referenz zum Punkt Objekt wird auf den Memorystack gespeichert.",
        "codeLine": 3,
        "instructions": [
          {
            "type": "callStack",
            "action": "pop",
            "payload": {
              "name": "Point(3, 4)",
              "classes": [
                "object_2"
              ]
            }
          },
          {
            "type": "memStack",
            "action": "pop",
            "payload": {
              "name": "Return Address",
              "value": "Line 3",
              "type": "Address",
              "classes": []
            }
          },
          {
            "type": "memStack",
            "action": "push",
            "payload": {
              "name": "b",
              "value": "0x2003",
              "type": "Reference",
              "classes": [
                "object_2"
              ]
            }
          }
        ]
      },
      {
        "explanation": "Linienkonstruktor wird mit den Werten a=0x2001, b=0x2003 aufgerufen.",
        "codeLine": 4,
        "instructions": [
          {
            "type": "memStack",
            "action": "push",
            "payload": {
              "name": "Return Address",
              "value": "Line 4",
              "type": "Address",
              "classes": []
            }
          },
          {
            "type": "callStack",
            "action": "push",
            "payload": {
              "name": "Line(Point a, Point b)",
              "classes": [
                "object_3"
              ]
            }
          }
        ]
      },
      {
        "explanation": "Referenz zum Punkt 'a' wird für die Linie auf dem Heap abgespeichert.",
        "codeLine": 14,
        "instructions": [
          {
            "type": "heap",
            "action": "push",
            "payload": {
              "name": "a",
              "value": "0x2001",
              "type": "Reference",
              "address": "0x3001",
              "classes": [
                "object_3"
              ]
            }
          }
        ]
      },
      {
        "explanation": "Referenz zum Punkt 'b' wird für die Linie auf dem Heap abgespeichert.",
        "codeLine": 15,
        "instructions": [
          {
            "type": "heap",
            "action": "push",
            "payload": {
              "name": "b",
              "value": "0x2003",
              "address": "0x3002",
              "type": "Reference",
              "classes": [
                "object_3"
              ]
            }
          }
        ]
      },
      {
        "explanation": "Konstruktor ist beendet. Referenz zum Linienobjekt wird auf den Memorystack gepushed.",
        "codeLine": 4,
        "instructions": [
          {
            "type": "callStack",
            "action": "pop",
            "payload": {
              "name": "Line(Point a, Point b)",
              "classes": [
                "object_3"
              ]
            }
          },
          {
            "type": "memStack",
            "action": "pop",
            "payload": {
              "name": "Return Address",
              "value": "Line 4",
              "type": "Address",
              "classes": []
            }
          },
          {
            "type": "memStack",
            "action": "push",
            "payload": {
              "name": "line",
              "value": "0x3001",
              "type": "Reference",
              "classes": [
                "object_3"
              ]
            }
          }
        ]
      },
      {
        "explanation": "distance() Methode wird aufgerufen.",
        "codeLine": 6,
        "instructions": [
          {
            "type": "memStack",
            "action": "push",
            "payload": {
              "name": "Return Address",
              "value": "Line 6",
              "type": "Address",
              "classes": []
            }
          },
          {
            "type": "callStack",
            "action": "push",
            "payload": {
              "name": "distance()",
              "classes": []
            }
          }
        ]
      },
      {
        "explanation": "'distance()' Methode wrude beendet. Der Return Wert wird auf dem Memorystack gespeichert.",
        "codeLine": 6,
        "instructions": [
          {
            "type": "memStack",
            "action": "pop",
            "payload": {
              "name": "Return Address",
              "value": "Line 6",
              "type": "Address",
              "classes": []
            }
          },
          {
            "type": "callStack",
            "action": "pop",
            "payload": {
              "name": "distance()",
              "classes": []
            }
          },
          {
            "type": "memStack",
            "action": "push",
            "payload": {
              "name": "return",
              "value": "15.81",
              "type": "double",
              "classes": []
            }
          }
        ]
      },
      {
        "explanation": "Die Print Funktion wird aufgerufen.",
        "codeLine": 6,
        "instructions": [
          {
            "type": "callStack",
            "action": "push",
            "payload": {
              "name": "System.out.println()",
              "classes": []
            }
          },
          {
            "type": "console",
            "action": "push",
            "payload": {
              "text": "15.81"
            }
          }
        ]
      },
      {
        "explanation": "Die Print Funktion ist beendet.",
        "codeLine": 6,
        "instructions": [
          {
            "type": "callStack",
            "action": "pop",
            "payload": {
              "name": "System.out.println()",
              "classes": []
            }
          },
          {
            "type": "memStack",
            "action": "pop",
            "payload": {
              "name": "return",
              "value": "15.81",
              "type": "double",
              "classes": []
            }
          }
        ]
      },
      {
        "explanation": "Die 'main()' Funktion wird beendet. Alle Elemente auf dem Memorystack werden abgebaut.",
        "codeLine": 7,
        "instructions": [
          {
            "type": "memStack",
            "action": "pop",
            "payload": {
              "name": "line",
              "value": "0x3001",
              "type": "Reference",
              "classes": [
                "object_3"
              ]
            }
          },
          {
            "type": "memStack",
            "action": "pop",
            "payload": {
              "name": "b",
              "value": "0x2003",
              "type": "Reference",
              "classes": [
                "object_2"
              ]
            }
          },
          {
            "type": "memStack",
            "action": "pop",
            "payload": {
              "name": "a",
              "value": "0x2001",
              "type": "Reference",
              "classes": [
                "object_1"
              ]
            }
          }
        ]
      },
      {
        "explanation": "Das Program ist fertig.",
        "codeLine": 8,
        "instructions": [
          {
            "type": "memStack",
            "action": "pop",
            "payload": {
              "name": "args",
              "value": "0x1001",
              "type": "Reference",
              "classes": [
                "method_main"
              ]
            }
          },
          {
            "type": "callStack",
            "action": "pop",
            "payload": {
              "name": "main()",
              "classes": [
                "method_main"
              ]
            }
          }
        ]
      }
    ],
    "code": [
      "public class PointLineExample {",
      "    public static void main(String[] args) {",
      "        Point a = new Point(10, 5);",
      "        Point b = new Point(3, 4);",
      "        Line line = new Line(a, b);",
      "",
      "        System.out.println(line.distance());",
      "    }",
      "}",
      "public class Line {",
      "    Point a;",
      "    Point b;",
      "",
      "    Line(Point a, Point b) {",
      "        this.a = a;",
      "        this.b = b;",
      "    }",
      "",
      "    public double distance() {",
      "        return Math.sqrt(Math.pow(a.x + b.x, 2) + Math.pow(a.y + b.y, 2));",
      "    }",
      "}",
      "public class Point {",
      "    int x;",
      "    int y;",
      "",
      "    Point(int x, int y) {",
      "        this.x = x;",
      "        this.y = y;",
      "    }",
      "}"
    ]
  },
  {
    "title": "Zinsrechner",
    "classes": [
      "method_main",
      "object_1",
      "object_2"
    ],
    "steps": [
      {
        "explanation": "Die main() Methode wurde aufgerufen und auf den Callstack gepushed.",
        "codeLine": 18,
        "instructions": [
          {
            "type": "callStack",
            "action": "push",
            "payload": {
              "name": "main()",
              "classes": [
                "method_main"
              ]
            }
          },
          {
            "type": "heap",
            "action": "push",
            "payload": {
              "name": "args",
              "value": "[]",
              "type": "String[]",
              "classes": [
                "method_main"
              ],
              "address": "0x1001"
            }
          },
          {
            "type": "memStack",
            "action": "push",
            "payload": {
              "name": "args",
              "value": "0x1001",
              "type": "Reference",
              "classes": [
                "method_main"
              ]
            }
          }
        ]
      },
      {
        "explanation": "Kapital wird mit dem Wert 10'000 auf den Memory-Stack gepushed.",
        "codeLine": 19,
        "instructions": [
          {
            "type": "memStack",
            "action": "push",
            "payload": {
              "name": "kapital",
              "value": "10000",
              "type": "double",
              "classes": [
              ]
            }
          }
        ]
      },
      {
        "explanation": "Tage wirt mit dem Wert 90 auf den Memory-Stack gepushed. ",
        "codeLine": 20,
        "instructions": [
          {
            "type": "memStack",
            "action": "push",
            "payload": {
              "name": "tage",
              "value": "90",
              "type": "int",
              "classes": [
              ]
            }
          }
        ]
      },
      {
        "explanation": "Zins wird mit dem Wert 1.3 auf den Memory-Stack gepushed.",
        "codeLine": 21,
        "instructions": [
          {
            "type": "memStack",
            "action": "push",
            "payload": {
              "name": "zins",
              "value": "1.3",
              "type": "double",
              "classes": [
              ]
            }
          }
        ]
      },
      {
        "explanation": "Aufruf von laufzinsBerechnen(kapital=10000, tage=90, zins=1.3). Rücksprungadresse wird auf dem Memory-Stack abgespeichert.",
        "codeLine": 22,
        "instructions": [
          {
            "type": "memStack",
            "action": "push",
            "payload": {
              "name": "Return Address",
              "value": "Line 22",
              "type": "Address",
              "classes": ["object_1"]
            }
          },
          {
            "type": "callStack",
            "action": "push",
            "payload": {
              "name": "laufzinsBerechnen(double, int, double)",
              "tooltip": "",
              "classes": ["object_1"]
            }
          }
        ]
      },
      {
        "explanation": "Aufruf von paramCheck innerhalb von laufzinsBerechnen. Rücksprungadresse wird gespeichert.",
        "codeLine": 3,
        "instructions": [
          {
            "type": "memStack",
            "action": "push",
            "payload": {
              "name": "Return Address",
              "value": "Line 5",
              "type": "Address",
              "classes": [
                "object_2"
              ]
            }
          },
          {
            "type": "callStack",
            "action": "push",
            "payload": {
              "name": "paramCheck(double, int, double)",
              "tooltip": "",
              "classes": [
                "object_2"
              ]
            }
          }
        ]
      },
      {
        "explanation": "Alle Parameter sind gültig, es wird true zurückgegeben.",
        "codeLine": 12,
        "instructions": [
          {
            "type": "callStack",
            "action": "pop",
            "payload": {
              "name": "paramCheck(double, int, double)",
              "tooltip": "",
              "classes": [
                "object_2"
              ]
            }
          },
          {
            "type": "memStack",
            "action": "pop",
            "payload": {
              "name": "Return Address",
              "value": "Line 5",
              "type": "Address",
              "classes": [
                "object_2"
              ]
            }
          }
        ]
      },
      {
        "explanation": "Berechnung abgeschlossen: Ergebnis 3.25 wird zurückgegeben.",
        "codeLine": 4,
        "instructions": [
          {
            "type": "callStack",
            "action": "pop",
            "payload": {
              "name": "laufzinsBerechnen(double, int, double)",
              "tooltip": "",
              "classes": [
                "object_1"
              ]
            }
          },
          {
            "type": "memStack",
            "action": "pop",
            "payload": {
              "name": "Return Address",
              "value": "Line 22",
              "type": "Address",
              "classes": [
                "object_1"
              ]
            }
          },
          {
            "type": "memStack",
            "action": "push",
            "payload": {
              "name": "result",
              "value": "3.25",
              "type": "double",
              "classes": [
              ]
            }
          }
        ]
      },
      {
        "explanation": "Ausgabe des Ergebnisses auf der Konsole.",
        "codeLine": 22,
        "instructions": [
          {
            "type": "console",
            "action": "push",
            "payload": {
              "text": "Der Zinsbetraegt 3.25"
            }
          }
        ]
      },
      {
        "explanation": "Die Methode main() ist abgeschlossen.",
        "codeLine": 23,
        "instructions": [
          {
            "type": "callStack",
            "action": "pop",
            "payload": {
              "name": "main()",
              "tooltip": "",
              "classes": [
                "method_main"
              ]
            }
          },
          {
            "type": "memStack",
            "action": "pop",
            "payload": {
              "name": "return",
              "value": "3.25",
              "type": "double",
              "classes": [
                "object_1"
              ]
            }
          },
          {
            "type": "memStack",
            "action": "pop",
            "payload": {
              "name": "zins",
              "value": "1.3",
              "type": "double",
              "classes": [
              ]
            }
          },
          {
            "type": "memStack",
            "action": "pop",
            "payload": {
              "name": "tage",
              "value": "90",
              "type": "int",
              "classes": [
              ]
            }
          },
          {
            "type": "memStack",
            "action": "pop",
            "payload": {
              "name": "kapital",
              "value": "10000",
              "type": "double",
              "classes": [
              ]
            }
          },
          {
            "type": "memStack",
            "action": "pop",
            "payload": {
              "name": "args",
              "value": "0x1001",
              "type": "Reference",
              "classes": [
                "method_main"
              ]
            }
          }
        ]
      }
    ],
    "code": [
      "public class Zinsrechner {",
      "",
      "    public static double laufzinsBerechnen(double kapital, int anlagedauerInTagen, double zinsInDezimal) {",
      "        if (paramCheck(kapital, anlagedauerInTagen, zinsInDezimal) == true) {",
      "            return ((kapital * anlagedauerInTagen * zinsInDezimal) / 36000);",
      "        } else {",
      "            return 0;",
      "        }",
      "    }",
      "",
      "    public static boolean paramCheck(double kapital, int anlagedauerInTagen, double zinsInDezimal) {",
      "        if (kapital > 0 && anlagedauerInTagen > 0 && zinsInDezimal > 0) {",
      "            return true;",
      "        } else {",
      "            return false;",
      "        }",
      "    }",
      "",
      "    public static void main(String[] args) {",
      "        double kapital = 10000;",
      "        int tage = 90;",
      "        double zins = 1.3;",
      "        System.out.print(\"Der Zinsbetraegt \" + laufzinsBerechnen(kapital, tage, zins));",
      "    }",
      "}"
    ]
  },
  {
    "title": "Temperaturrechner",
    "steps": [
      {
        "explanation": "Die main() Methode wurde aufgerufen und auf den Callstack gepushed. Konstanten werden in die Methodarea geladen.",
        "codeLine": 11,
        "instructions": [
          {
            "type": "callStack",
            "action": "push",
            "payload": {
              "name": "main()",
              "classes": [
                "method_main"
              ]
            }
          },
          {
            "type": "heap",
            "action": "push",
            "payload": {
              "name": "args",
              "value": "[]",
              "type": "String[]",
              "classes": [
                "method_main"
              ],
              "address": "0x1001"
            }
          },
          {
            "type": "memStack",
            "action": "push",
            "payload": {
              "name": "args",
              "value": "0x1001",
              "type": "Reference",
              "classes": [
                "method_main"
              ]
            }
          },
          {
            "type": "constant",
            "action": "push",
            "payload": {
              "name": "CELSIUS_KEVIN_DIFF",
              "value": 273.15,
              "type": "double",
              "classes": []
            }
          }
        ]
      },
      {
        "explanation": "Der Wert Temperature1InCelsius wird auf dem Memorystack abgespeichert.",
        "codeLine": 12,
        "instructions": [
          {
            "type": "memStack",
            "action": "push",
            "payload": {
              "name": "temperature1InCelsius",
              "value": "20",
              "type": "double",
              "classes": []
            }
          }
        ]
      },
      {
        "explanation": "Die Methode 'CeliusToKelvin() wird aufgerufen.",
        "codeLine": 13,
        "instructions": [
          {
            "type": "callStack",
            "action": "push",
            "payload": {
              "name": "CeliusToKelvin()",
              "classes": []
            }
          },
          {
            "type": "memStack",
            "action": "push",
            "payload": {
              "name": "Return Address",
              "value": "Line 13",
              "type": "Address",
              "classes": []
            }
          }
        ]
      },
      {
        "explanation": "Die Methode 'CelsiusToKelvin' ist beendet. Der Wert wird auf dem MemoryStack abgespeichert.",
        "codeLine": 8,
        "instructions": [
          {
            "type": "callStack",
            "action": "pop",
            "payload": {
              "name": "CeliusToKelvin()",
              "classes": []
            }
          },
          {
            "type": "memStack",
            "action": "pop",
            "payload": {
              "name": "Return Address",
              "value": "Line 13",
              "type": "Address",
              "classes": []
            }
          },
          {
            "type": "memStack",
            "action": "push",
            "payload": {
              "name": "return",
              "value": "-253.15",
              "type": "double",
              "classes": []
            }
          }
        ]
      },
      {
        "explanation": "Die Print Funktion wird aufgerufen.",
        "codeLine": 13,
        "instructions": [
          {
            "type": "callStack",
            "action": "push",
            "payload": {
              "name": "System.out.println()",
              "classes": []
            }
          },
          {
            "type": "console",
            "action": "push",
            "payload": {
              "text": "20.00°C sind -253.15 Kelvin."
            }
          }
        ]
      },
      {
        "explanation": "Die Print Funktion ist beendet.",
        "codeLine": 13,
        "instructions": [
          {
            "type": "callStack",
            "action": "pop",
            "payload": {
              "name": "System.out.println()",
              "classes": []
            }
          },
          {
            "type": "memStack",
            "action": "pop",
            "payload": {
              "name": "return",
              "value": "-253.15",
              "type": "double",
              "classes": []
            }
          }
        ]
      },

      {
        "explanation": "Der Wert Temperature2InKelvin wird auf dem Memorystack abgespeichert.",
        "codeLine": 17,
        "instructions": [
          {
            "type": "memStack",
            "action": "push",
            "payload": {
              "name": "temperature2InKelvin",
              "value": "-30",
              "type": "double",
              "classes": []
            }
          }
        ]
      },
      {
        "explanation": "Die Methode 'KelvinToCelsius() wird aufgerufen.",
        "codeLine": 18,
        "instructions": [
          {
            "type": "callStack",
            "action": "push",
            "payload": {
              "name": "KelvinToCelsius()",
              "classes": []
            }
          },
          {
            "type": "memStack",
            "action": "push",
            "payload": {
              "name": "Return Address",
              "value": "Line 18",
              "type": "Address",
              "classes": []
            }
          }
        ]
      },
      {
        "explanation": "Die Methode 'KelvinToCelsius' ist beendet. Der Wert wird auf dem MemoryStack abgespeichert.",
        "codeLine": 6,
        "instructions": [
          {
            "type": "callStack",
            "action": "pop",
            "payload": {
              "name": "KelvinToCelsius()",
              "classes": []
            }
          },
          {
            "type": "memStack",
            "action": "pop",
            "payload": {
              "name": "Return Address",
              "value": "Line 18",
              "type": "Address",
              "classes": []
            }
          },
          {
            "type": "memStack",
            "action": "push",
            "payload": {
              "name": "return",
              "value": "243.15",
              "type": "double",
              "classes": []
            }
          }
        ]
      },
      {
        "explanation": "Die Print Funktion wird aufgerufen.",
        "codeLine": 18,
        "instructions": [
          {
            "type": "callStack",
            "action": "push",
            "payload": {
              "name": "System.out.println()",
              "classes": []
            }
          },
          {
            "type": "console",
            "action": "push",
            "payload": {
              "text": "-30.00 Kelvin sind 243.15°C."
            }
          }
        ]
      },
      {
        "explanation": "Die Print Funktion ist beendet.",
        "codeLine": 18,
        "instructions": [
          {
            "type": "callStack",
            "action": "pop",
            "payload": {
              "name": "System.out.println()",
              "classes": []
            }
          },
          {
            "type": "memStack",
            "action": "pop",
            "payload": {
              "name": "return",
              "value": "243.15",
              "type": "double",
              "classes": []
            }
          }
        ]
      },
      {

        "explanation": "Die 'main()' Funktion wird beendet. Alle Elemente auf dem Memorystack werden abgebaut.",
        "codeLine": 18,
        "instructions": [
          {
            "type": "memStack",
            "action": "pop",
            "payload": {
              "name": "temperature2InKelvin",
              "value": "-30",
              "type": "double",
              "classes": []
            }
          },
          {
            "type": "memStack",
            "action": "pop",
            "payload": {
              "name": "temperature1InCelsius",
              "value": "20",
              "type": "double",
              "classes": []
            }
          }
        ]
      },
      {
        "explanation": "Das Program ist fertig.",
        "codeLine": 8,
        "instructions": [
          {
            "type": "memStack",
            "action": "pop",
            "payload": {
              "name": "args",
              "value": "0x1001",
              "type": "Reference",
              "classes": [
                "method_main"
              ]
            }
          },
          {
            "type": "callStack",
            "action": "pop",
            "payload": {
              "name": "main()",
              "classes": [
                "method_main"
              ]
            }
          }
        ]
      }
    ],
    "code": [
      "public class TemperaturEinheitRechner {",
      "    public static double CELSIUS_KEVIN_DIFF = 273.15;",
      "",
      "    public static double KelvinToCelsius(double kelvin) {",
      "        return kelvin + CELSIUS_KEVIN_DIFF;",
      "    }",
      "",
      "    public static double CelsiusToKelvin(double celsius) {",
      "        return celsius - CELSIUS_KEVIN_DIFF;",
      "    }",
      "",
      "    public static void main(String[] args) {",
      "        double temperature1InCelsius = 20;",
      "        System.out.printf(\"%.2f°C sind %.2f Kelvin.\\n\",",
      "           temperature1InCelsius,",
      "           CelsiusToKelvin(temperature1InCelsius)",
      "        );",
      "        double temperature2InKelvin = -30;",
      "        System.out.printf(\"%.2f Kelvin sind %.2f°C.\\n\",",
      "           temperature2InKelvin,",
      "           KelvinToCelsius(temperature2InKelvin)",
      "        );",

      "    }",
      "}"
    ]
  }
]